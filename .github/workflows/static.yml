# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

      - name: Generate documentation
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config --global --add safe.directory '*'
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          python3 src/generate_doc.py
          git add index.html
          if git commit --no-verify -m "docs: Regenerate index.html"; then
            # rebase and push in a retry loop
            for i in {1..5}; do
              git pull --rebase && git push https://${{ secrets.TOKEN }}@github.com/OWNER/REPO.git && break || sleep 1
            done
          fi

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
